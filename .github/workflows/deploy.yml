name: CD with Gradle

on:
  push:
    branches: [ "develop" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      ## create application.yml
      - name: make application.properties
        run: |
          mkdir -p ./src/main/resources
          cd ./src/main/resources
          touch ./application.yml
          
          echo "${{ secrets.APPLICATION }}" >> ./application.yml
          cat ./application.yml
        shell: bash

      ## create env.properties file
      - name: Create env.properties file
        run: |
          mkdir -p ./src/main/resources
          echo "DB_URL=${{ secrets.DB_URL }}" >> ./src/main/resources/env.properties
          echo "DB_USERNAME=${{ secrets.DB_USERNAME }}" >> ./src/main/resources/env.properties
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> ./src/main/resources/env.properties
          echo "KAKAO_CLIENT_ID=${{ secrets.KAKAO_CLIENT_ID }}" >> ./src/main/resources/env.properties
          echo "KAKAO_CLIENT_SECRET=${{ secrets.KAKAO_CLIENT_SECRET }}" >> ./src/main/resources/env.properties
          echo "KAKAO_REDIRECT_URI=${{ secrets.KAKAO_REDIRECT_URI }}" >> ./src/main/resources/env.properties
          echo "KAKAO_LOGIN_URL=${{ secrets.KAKAO_LOGIN_URL }}" >> ./src/main/resources/env.properties
          echo "JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }}" >> ./src/main/resources/env.properties
        shell: bash

      ## gradle build
      - name: Build with Gradle
        run: |
          chmod +x ./gradlew
          ./gradlew clean build -x test

      ## 웹 이미지 빌드 및 도커허브에 push
      - name: web docker build and push
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build -t ${{ secrets.DOCKER_REPO }}/namanba-web .
          docker push ${{ secrets.DOCKER_REPO }}/namanba-web
          docker build -f ./config/nginx/Dockerfile -t ${{ secrets.DOCKER_REPO }}/namanba-nginx .
          docker push ${{ secrets.DOCKER_REPO }}/namanba-nginx

      - name: Create Remote Directory
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ubuntu
          key: ${{ secrets.KEY }}
          script: mkdir -p ~/srv/ubuntu

      - name: copy source via ssh key
        uses: burnett01/rsync-deployments@4.1
        with:
          switches: -avzr --delete
          remote_path: ~/srv/ubuntu
          remote_host: ${{ secrets.HOST }}
          remote_user: ubuntu
          remote_key: ${{ secrets.KEY }}

      ## docker compose up
      - name: executing remote ssh commands using password
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ubuntu
          key: ${{ secrets.KEY }}
          script: |
            sh ~/srv/ubuntu/config/scripts/deploy.sh
            cd /home/ubuntu/srv/ubuntu/
            sudo chmod 666 /var/run/docker.sock
            sudo docker rm -f $(sudo docker ps -qa)
            sudo docker pull ${{ secrets.DOCKER_REPO }}/namanba-web
            sudo docker pull ${{ secrets.DOCKER_REPO }}/namanba-nginx
            docker-compose up -d
            docker image prune -f
